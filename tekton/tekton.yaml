apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: rpm-build
spec:
  # resources:
  # outputs:
  # https://stackoverflow.com/questions/69617680/output-types-for-tekton-task
  # The docs do not mention the types; this SO literally pulled it from the src
  # - name: builtRpm
  #   type: storage
  # - name: builtSourceRpm
  #   type: storage
  workspaces:
    - name: source
    - name: artifacts
  steps:
    - name: build
      image: centos:7
      script: |
        yum install -y rpmdevtools rpmlint
        rpmdev-setuptree
        cd ~/rpmbuild
        mkdir test-0.0.1
        cat <<EOF >> test-0.0.1/test.sh >
        #!/bin/bash
        echo "test output"
        EOF
        tar czvf SOURCES/test-0.0.1.tar.gz test-0.0.1/
        cat <<EOF > SPECS/test.spec
        Name:           test
        Version:        0.0.1
        Release:        1%{?dist}
        Summary:        test script
        BuildArch:      noarch

        License:        none
        Source0:        %{name}-%{version}.tar.gz

        Requires:       bash

        %description
        Test rpm script

        %prep
        %setup -q


        %install
        rm -rf \$RPM_BUILD_ROOT
        mkdir -p \$RPM_BUILD_ROOT/%{_bindir}
        cp %{name}.sh \$RPM_BUILD_ROOT/%{_bindir}

        %clean
        rm -rf \$RPM_BUILD_ROOT

        %files
        %{_bindir}/%{name}.sh

        %changelog
        * Thu Nov   3 2022 DJR
        - 0.0.1
        - Initial release
        EOF
        rpmlint SPECS/test.spec
        rpmbuild -bs ~/rpmbuild/SPECS/test.spec
        rpmbuild -bb ~/rpmbuild/SPECS/test.spec
        cp ~/rpmbuild/RPMS/noarch/*.rpm ~/rpmbuild/SRPMS/*.rpm $(workspaces.artifacts.path)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: create-rpm
spec:
  description: |
    This pipeline clones a git repo, then creates an rpm
  params:
    - name: repo-url
      type: string
      description: The git repo URL to clone from.
  workspaces:
    - name: shared-data
      description: |
        This workspace contains the cloned repo files, so they can be read by the
        next task.
    - name: artifact-data
      description: |
        This workspace contains the built RPMs.
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
    - name: rpm-build
      runAfter:
        - fetch-source
      taskRef:
        name: rpm-build
      workspaces:
        - name: source
          workspace: shared-data
        - name: artifacts
          workspace: artifact-data
